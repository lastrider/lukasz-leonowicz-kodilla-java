DROP TRIGGER IF EXISTS BOOKS_INSERT;
DROP TRIGGER IF EXISTS BOOKS_UPDATE;
DROP TRIGGER IF EXISTS BOOKS_DELETE;
DROP TRIGGER IF EXISTS READERS_INSERT;
DROP TRIGGER IF EXISTS READERS_UPDATE;
DROP TRIGGER IF EXISTS READERS_DELETE;

SET SQL_SAFE_UPDATES=0;
DROP TABLE IF EXISTS  BOOKS_AUD;
DROP TABLE IF EXISTS  READERS_AUD;
SET SQL_SAFE_UPDATES=1;


CREATE TABLE BOOKS_AUD
(
    EVENT_ID       INT(11)  NOT NULL AUTO_INCREMENT,
    EVENT_DATE     DATETIME NOT NULL,
    EVENT_TYPE     VARCHAR(10) DEFAULT NULL,
    OLD_BOOK_ID    VARCHAR(11),
    OLD_TITLE      VARCHAR(255),
    OLD_PUBYEAR    INT,
    OLD_BESTSELLER BOOLEAN     DEFAULT FALSE,
    NEW_BOOK_ID    VARCHAR(11),
    NEW_TITLE      VARCHAR(255),
    NEW_PUBYEAR    INT,
    NEW_BESTSELLER BOOLEAN,
    PRIMARY KEY (EVENT_ID)
);

CREATE TABLE READERS_AUD
(
    EVENT_ID      INT(11)  NOT NULL AUTO_INCREMENT,
    EVENT_DATE    DATETIME NOT NULL,
    EVENT_TYPE    VARCHAR(10),
    OLD_FIRSTNAME VARCHAR(255),
    OLD_LASTNAME  VARCHAR(255),
    OLD_PESELID   INT(11),
    OLD_VIP_LEVEL BOOLEAN DEFAULT FALSE,
    NEW_FIRSTNAME VARCHAR(255),
    NEW_LASTNAME  VARCHAR(255),
    NEW_PESELID   INT(11),
    NEW_VIP_LEVEL BOOLEAN,
    PRIMARY KEY (EVENT_ID)
);

DELIMITER $$

CREATE TRIGGER READERS_INSERT
    AFTER INSERT
    ON READERS
    FOR EACH ROW
BEGIN
    INSERT INTO READERS_AUD(EVENT_DATE, EVENT_TYPE, NEW_FIRSTNAME, NEW_LASTNAME, NEW_PESELID, NEW_VIP_LEVEL)
        VALUE (CURDATE(), "INSERT", NEW.FIRSTNAME, NEW.LASTNAME, NEW.PESELID, NEW.VIP_LEVEL);

end $$

CREATE TRIGGER READERS_DELETE
    AFTER DELETE
    ON READERS
    FOR EACH ROW
BEGIN
    INSERT INTO READERS_AUD(EVENT_DATE, EVENT_TYPE, OLD_FIRSTNAME, OLD_LASTNAME, OLD_PESELID, OLD_VIP_LEVEL)
        VALUE (CURDATE(), "DELETE", OLD.FIRSTNAME, OLD.LASTNAME, OLD.PESELID, OLD.VIP_LEVEL);
end $$

CREATE TRIGGER READERS_UPDATE
    AFTER UPDATE
    ON READERS
    FOR EACH ROW
BEGIN
    INSERT INTO READERS_AUD( event_date, event_type, old_firstname, old_lastname, old_peselid, old_vip_level,
                            new_firstname, new_lastname, new_peselid, new_vip_level)
        value (CURDATE(), "UPDATE", OLD.FIRSTNAME, OLD.LASTNAME, OLD.PESELID, OLD.VIP_LEVEL, NEW.FIRSTNAME,
               NEW.LASTNAME, NEW.PESELID, NEW.VIP_LEVEL);
END $$

CREATE TRIGGER BOOKS_INSERT
    AFTER INSERT
    ON BOOKS
    FOR EACH ROW
BEGIN
    INSERT INTO BOOKS_AUD(EVENT_DATE, EVENT_TYPE, NEW_BOOK_ID, NEW_TITLE, NEW_PUBYEAR, NEW_BESTSELLER)
        VALUE (CURDATE(), "INSERT", NEW.BOOK_ID, NEW.TITLE, NEW.PUBYEAR, NEW.BESTSELLER);
end $$

CREATE TRIGGER BOOKS_DELETE
    AFTER DELETE
    ON BOOKS
    FOR EACH ROW
BEGIN
    INSERT INTO BOOKS_AUD(EVENT_DATE, EVENT_TYPE, OLD_BOOK_ID, OLD_TITLE, OLD_PUBYEAR, OLD_BESTSELLER)
        VALUE (CURDATE(), "DELETE", OLD.BOOK_ID, OLD.TITLE, OLD.PUBYEAR, OLD.BESTSELLER);
end $$

CREATE TRIGGER BOOKS_UPDATE
    AFTER UPDATE
    ON BOOKS
    FOR EACH ROW
BEGIN
    INSERT INTO BOOKS_AUD(EVENT_DATE, EVENT_TYPE, OLD_BOOK_ID, OLD_TITLE, OLD_PUBYEAR, OLD_BESTSELLER, NEW_BOOK_ID,
                          NEW_TITLE, NEW_PUBYEAR, NEW_BESTSELLER)
        VALUE (CURDATE(), "UPDATE", OLD.BOOK_ID, OLD.TITLE, OLD.PUBYEAR, OLD.BESTSELLER, NEW.BOOK_ID, NEW.TITLE,
               NEW.PUBYEAR, NEW.BESTSELLER);
end $$

DELIMITER ;

INSERT INTO readers (FIRSTNAME, LASTNAME, PESELID) VALUE ("JDAF", "KADSFKL", 214244);
COMMIT;
UPDATE readers SET LASTNAME="ADFKJF" WHERE READER_ID=8;
COMMIT;
DELETE FROM readers WHERE READER_ID =8;
COMMIT;

INSERT INTO books ( TITLE, PUBYEAR) VALUE ("DAKFJ",1234);
COMMIT ;
UPDATE books SET PUBYEAR =1234 WHERE BOOK_ID=8;
COMMIT ;
DELETE FROM books WHERE BOOK_ID=8;
COMMIT ;
